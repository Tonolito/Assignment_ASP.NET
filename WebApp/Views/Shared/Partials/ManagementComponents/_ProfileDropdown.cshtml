@using System.Security.Claims

@{
    var displayName = User.Claims.FirstOrDefault(x => x.Type == "DisplayName")?.Value;

    var provider = User?.FindFirstValue(ClaimTypes.AuthenticationMethod);
    if(string.IsNullOrEmpty(provider))
    {
        provider = "Local Identity";
    }

    var email = User?.FindFirstValue(ClaimTypes.Email);
}
<div class="profile-dropdown-container">
    <button class="btn-profile" id="profile-dropdown-button" data-type="dropdown" data-target="#profile-dropdown">
        <i class="fa-duotone fa-solid fa-gear icon-trigger"></i>
    </button>
    <div class="profile-dropdown" id="profile-dropdown">
        <div class="profile-bar">
            <div class="img-container">
                @await Component.InvokeAsync("ProfileImage")

            </div>
            <p>@displayName</p>
            <p>@email</p>
            <p>@provider</p>
        </div>
        <div class="darkmode-bar">
            <img src="/images/Setting.svg" alt="">
            <div id="darkmode-toggle-switch" class="btn-toggle-switch">
                <span class="darkmode-text">Dark mode</span>
                <label class="switch" for="darkmode-switch">
                    <input type="checkbox" id="darkmode-switch" />
                    <span class="slider round"></span>
                </label>
            </div>
        </div>
        <div class="horizontal-line"></div>
        <a asp-action="SignOut" asp-controller="Auth" class="logout-bar"> <img src="/images/Logout.svg" alt=""> Logout</a>
    </div>
</div>

 